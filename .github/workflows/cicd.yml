name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Check for version bump
        run: |
          if [ ! -d ".yarn/versions" ] || [ -z "$(ls -A .yarn/versions 2>/dev/null)" ]; then
            echo "❌ Error: No deferred version found in .yarn/versions"
            echo "Please add a version bump using: yarn version patch|minor|major --deferred"
            exit 1
          else
            echo "✅ Found deferred version changes:"
            ls -la .yarn/versions/
          fi

      - name: Run diagnostics tests
        run: yarn test-diagnostics

      - name: Run style tests
        run: yarn test-style

  check-version:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.version_check.outputs.has_changes }}
    
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Check for version changes
        id: version_check
        run: |
          if [ ! -d ".yarn/versions" ] || [ -z "$(ls -A .yarn/versions 2>/dev/null)" ]; then
            echo "No version changes to apply"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Version changes found, proceeding with publish"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

  publish:
    needs: [test, check-version]
    if: needs.check-version.outputs.has_changes == 'true'
    runs-on: ubuntu-latest

    permissions:
      contents: write # Required for git operations (commit, tag, push)
      id-token: write # Required for npm provenance

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Apply deferred version changes
        run: yarn version apply --all

      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Get package version
        id: package_version
        run: echo "version=v$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Commit version changes
        run: |
          git add .
          git commit -m "Release ${{ steps.package_version.outputs.version }} [skip ci]"

      - name: Create and push tag
        run: |
          git tag ${{ steps.package_version.outputs.version }}
          git push origin main --tags

      - name: Publish to npm
        run: yarn npm publish --access public --provenance
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_PUBLISHING_TOKEN }}
